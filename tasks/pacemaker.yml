---
- name: Deploy Pacemaker high-availability packages
  ansible.builtin.dnf:
    name:
      - pcs
      - pacemaker
      - sap-cluster-connector
      - fence-agents-all
      - fence-agents-azure-arm
      - fence-agents-kdump
      - nmap-ncat
    state: present

- name: Deploy SAP Netweaver resource agent
  ansible.builtin.dnf:
    name:
      - resource-agents
      - resource-agents-sap
    state: present
  when:
    - sap_instance_type == "ASCS"

- name: Ensure SAP HANA resource agents are not installed for SAP Netweaver
  ansible.builtin.dnf:
    name:
      - resource-agents-sap-hana
      - resource-agents-sap-hana-scaleout
    state: absent
  when:
    - sap_instance_type == "ASCS"

- name: Deploy SAP HANA resource agent
  ansible.builtin.dnf:
    name:
      - resource-agents
      - resource-agents-sap-hana
    state: present
  when:
    - sap_instance_product == "HANA"

- name: Ensure SAP HANA scale out resource agents are not installed for SAP HANA
  ansible.builtin.dnf:
    name:
      - resource-agents-sap-hana-scaleout
    state: absent
  when:
    - sap_instance_product == "HANA"

- name: Enable and start Pacemaker high-availability service
  ansible.builtin.service:
    name: pcsd.service
    state: started
    enabled: true

- name: Set the password for hacluster
  ansible.builtin.user:
    name: "hacluster"
    password: "{{ sap_ha_password | password_hash('sha512') }}"

- name: Enable high-availability on local firewall
  ansible.posix.firewalld:
    service: high-availability
    permanent: true
    immediate: true
    state: enabled
  notify: Reload firewalld

- name: Capturing status for the Pacemaker high-availability cluster
  ansible.builtin.shell:
    cmd: "/usr/sbin/pcs status || /bin/true"
  register: sap_ha_cluster_status
  changed_when: sap_ha_cluster_status.rc != 0
  when:
    - ansible_facts['fqdn'] == sap_ha_primary

- name: Capturing properties for the Pacemaker high-availability cluster
  ansible.builtin.shell:
    cmd: "/usr/sbin/pcs property config --all || /bin/true"
  register: sap_ha_cluster_properties
  changed_when: sap_ha_cluster_properties.rc != 0
  when:
    - ansible_facts['fqdn'] == sap_ha_primary

- name: Capturing resources for the Pacemaker high-availability cluster
  ansible.builtin.shell:
    cmd: "/usr/sbin/pcs resource config || /bin/true"
  register: sap_ha_cluster_resources
  changed_when: sap_ha_cluster_resources.rc != 0
  when:
    - ansible_facts['fqdn'] == sap_ha_primary

- name: Capturing constraints for the Pacemaker high-availability cluster
  ansible.builtin.shell:
    cmd: "/usr/sbin/pcs constraint config --all || /bin/true"
  register: sap_ha_cluster_constraints
  changed_when: sap_ha_cluster_constraints.rc != 0
  when:
    - ansible_facts['fqdn'] == sap_ha_primary

- name: Authenticate primary cluster node
  ansible.builtin.command:
    cmd: "/usr/sbin/pcs host auth {{ sap_ha_primary }} {{ sap_ha_secondary }} -u hacluster -p {{ sap_ha_password }}"
  register: sap_ha_cluster_authorized
  changed_when: "'Authorized' in sap_ha_cluster_authorized.stdout"
  when:
    - ansible_facts['fqdn'] == sap_ha_primary
    - "sap_ha_cluster_status.stdout.find('pacemaker: active/enabled') == -1"

- name: Create the Pacemaker high-availability cluster
  ansible.builtin.command:
    cmd: "/usr/sbin/pcs cluster setup {{ sap_ha_name }} {{ sap_ha_primary }} {{ sap_ha_secondary }} totem token=30000"
  register: sap_ha_cluster_creation
  changed_when: "'Cluster has been successfully set up' in sap_ha_cluster_creation.stdout"
  when:
    - ansible_facts['fqdn'] == sap_ha_primary
    - "sap_ha_cluster_status.stdout.find('pacemaker: active/enabled') == -1"

- name: Enable the Pacemaker high-availability cluster
  ansible.builtin.command:
    cmd: /usr/sbin/pcs cluster enable --all
  register: sap_ha_cluster_enable
  changed_when: "'Cluster Enabled' in sap_ha_cluster_enable.stdout"
  when:
    - ansible_facts['fqdn'] == sap_ha_primary
    - "sap_ha_cluster_status.stdout.find('pacemaker: active/enabled') == -1"

- name: Start the Pacemaker high-availability cluster
  ansible.builtin.command:
    cmd: /usr/sbin/pcs cluster start --all
  register: sap_ha_cluster_start
  changed_when: "'Starting Cluster' in sap_ha_cluster_start.stdout"
  when:
    - ansible_facts['fqdn'] == sap_ha_primary
    - "sap_ha_cluster_status.stdout.find('pacemaker: active/enabled') == -1"

- name: Disable stonith for the the Pacemaker high-availability cluster
  ansible.builtin.command:
    cmd: /usr/sbin/pcs property set stonith-enabled=false
  register: sap_ha_cluster_property_set
  changed_when: "'stonith-enabled: false' in sap_ha_cluster_property_set.stdout"
  when:
    - not sap_ha_stonith|bool
    - ansible_facts['fqdn'] == sap_ha_primary
    - "sap_ha_cluster_properties.stdout.find('stonith-enabled: true') != -1"

- name: Allow concurrent fence actions for the the Pacemaker high-availability cluster
  ansible.builtin.command:
    cmd: /usr/sbin/pcs property set concurrent-fencing=true
  register: sap_ha_cluster_property_set
  changed_when: "'concurrent-fencing: true' in sap_ha_cluster_property_set.stdout"
  when:
    - ansible_facts['fqdn'] == sap_ha_primary
    - "sap_ha_cluster_properties.stdout.find('concurrent-fencing: false') != -1"
